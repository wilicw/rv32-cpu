[option]
exclude_paths = []
prefix_inout = "b_"
prefix_input = "i_"
prefix_output = "o_"
prefix_label = "l_"
prefix_instance = "u_"
# prefix_module = "mod_"
# prefix_package = "pkg_"
# prefix_interface = "ifc_"

[rules]
# blocking_assignment_in_always_ff = true
case_default = true
default_nettype_none = true
enum_with_type = true
for_with_begin = true
function_same_as_system_function = true
function_with_automatic = true
generate_case_with_label = true
generate_for_with_label = true
generate_if_with_label = true
# generate_keyword_forbidden = true
generate_keyword_required = true
# genvar_declaration_in_loop = true
genvar_declaration_out_loop = true
if_with_begin = true
inout_with_tri = true
input_with_var = true
interface_port_with_modport = true
# legacy_always = true
# level_sensitive_always = true
loop_variable_declaration = true
# lowercamelcase_interface = true
# lowercamelcase_module = true
# lowercamelcase_package = true
# non_ansi_module = true
non_blocking_assignment_in_always_comb = true
output_with_var = true
parameter_in_package = true
prefix_inout = true
prefix_input = true
prefix_instance = true
# prefix_interface = true
# prefix_module = true
prefix_output = true
prefix_package = true
priority_keyword = true
tab_character = true
unique0_keyword = true
unique_keyword = true
# uppercamelcase_interface = true
# uppercamelcase_module = true
# uppercamelcase_package = true
# wire_reg = true
generate_keyword = true
tab_charactor = true
genvar_declaration = true
